import numpy as np

def combine_maps(map_86, map_5,  index_dict, lr_dict, continuous_value_dict):
    map86 = map_86.copy()
    lr_map = map_5.copy()
    map_left = map86 * (map_5 == 1)
    map_right = map86 * (map_5 == 2)
    for key in reversed(continuous_value_dict):
        map_left[map_left == continuous_value_dict[key]] = key 
        map_right[map_right == continuous_value_dict[key]] = key 

    for key, value in index_dict.items():
        if lr_dict[key] == 1:
            map_left[map_left == key] = key
            map_right[map_right == key] = value
        elif lr_dict[key] == 2:
            map_left[map_left == key] = value
            map_right[map_right == key] = key
    
    combined_map = map_86 * (map_5 > 2)
    sepa_map = map_left + map_right
    combined_map = combined_map + lr_map
    combined_map[map_86 * map_5 == 0] = 0
    combined_map[map_5 == 3] = 159
    combined_map[map_5 == 4] = 168

    return combined_map

def postprocessing(parcellated, separated):
    index_dict = {1.0: 66.0, 2.0: 67.0, 3.0: 68.0, 4.0: 69.0, 5.0: 70.0, 6.0: 71.0, 7.0: 72.0, 73.0: 8.0, 74.0: 9.0, 10.0: 75.0, 11.0: 76.0, 12.0: 77.0, 13.0: 78.0, 14.0: 79.0, 15.0: 80.0, 16.0: 81.0, 17.0: 82.0, 18.0: 83.0, 19.0: 84.0, 20.0: 85.0, 21.0: 86.0, 22.0: 87.0, 23.0: 88.0, 24.0: 89.0, 25.0: 90.0, 26.0: 91.0, 27.0: 92.0, 28.0: 93.0, 29.0: 94.0, 30.0: 95.0, 31.0: 96.0, 32.0: 97.0, 33.0: 98.0, 34.0: 99.0, 100.0: 35.0, 101.0: 36.0, 102.0: 37.0, 103.0: 38.0, 104.0: 39.0, 105.0: 40.0, 106.0: 41.0, 107.0: 42.0, 108.0: 43.0, 109.0: 44.0, 110.0: 45.0, 111.0: 46.0, 112.0: 47.0, 113.0: 48.0, 114.0: 49.0, 115.0: 50.0, 116.0: 51.0, 117.0: 52.0, 118.0: 53.0, 119.0: 54.0, 120.0: 55.0, 121.0: 56.0, 122.0: 57.0, 123.0: 58.0, 124.0: 59.0, 125.0: 60.0, 126.0: 61.0, 127.0: 62.0, 128.0: 63.0, 129.0: 64.0, 130.0: 65.0, 131.0: 132.0, 133.0: 134.0, 135.0: 136.0, 137.0: 138.0, 139.0: 140.0, 141.0: 142.0, 143.0: 144.0, 145.0: 146.0, 147.0: 148.0, 149.0: 150.0, 151.0: 152.0, 153.0: 154.0, 155.0: 156.0, 157.0: 158.0, 160.0: 161.0, 162.0: 163.0, 164.0: 165.0, 166.0: 167.0}
    lr_dict = {1.0: 1.0, 2.0: 1.0, 3.0: 1.0, 4.0: 1.0, 5.0: 1.0, 6.0: 1.0, 7.0: 1.0, 8.0: 1.0, 9.0: 1.0, 10.0: 1.0, 11.0: 1.0, 12.0: 1.0, 13.0: 1.0, 14.0: 1.0, 15.0: 1.0, 16.0: 1.0, 17.0: 1.0, 18.0: 1.0, 19.0: 1.0, 20.0: 1.0, 21.0: 1.0, 22.0: 1.0, 23.0: 1.0, 24.0: 1.0, 25.0: 1.0, 26.0: 1.0, 27.0: 1.0, 28.0: 1.0, 29.0: 1.0, 30.0: 1.0, 31.0: 1.0, 32.0: 1.0, 33.0: 1.0, 34.0: 1.0, 35.0: 1.0, 36.0: 1.0, 37.0: 1.0, 38.0: 1.0, 39.0: 1.0, 40.0: 1.0, 41.0: 1.0, 42.0: 1.0, 43.0: 1.0, 44.0: 1.0, 45.0: 1.0, 46.0: 1.0, 47.0: 1.0, 48.0: 1.0, 49.0: 1.0, 50.0: 1.0, 51.0: 1.0, 52.0: 1.0, 53.0: 1.0, 54.0: 1.0, 55.0: 1.0, 56.0: 1.0, 57.0: 1.0, 58.0: 1.0, 59.0: 1.0, 60.0: 1.0, 61.0: 1.0, 62.0: 1.0, 63.0: 1.0, 64.0: 1.0, 65.0: 1.0, 66.0: 2.0, 67.0: 2.0, 68.0: 2.0, 69.0: 2.0, 70.0: 2.0, 71.0: 2.0, 72.0: 2.0, 73.0: 2.0, 74.0: 2.0, 75.0: 2.0, 76.0: 2.0, 77.0: 2.0, 78.0: 2.0, 79.0: 2.0, 80.0: 2.0, 81.0: 2.0, 82.0: 2.0, 83.0: 2.0, 84.0: 2.0, 85.0: 2.0, 86.0: 2.0, 87.0: 2.0, 88.0: 2.0, 89.0: 2.0, 90.0: 2.0, 91.0: 2.0, 92.0: 2.0, 93.0: 2.0, 94.0: 2.0, 95.0: 2.0, 96.0: 2.0, 97.0: 2.0, 98.0: 2.0, 99.0: 2.0, 100.0: 2.0, 101.0: 2.0, 102.0: 2.0, 103.0: 2.0, 104.0: 2.0, 105.0: 2.0, 106.0: 2.0, 107.0: 2.0, 108.0: 2.0, 109.0: 2.0, 110.0: 2.0, 111.0: 2.0, 112.0: 2.0, 113.0: 2.0, 114.0: 2.0, 115.0: 2.0, 116.0: 2.0, 117.0: 2.0, 118.0: 2.0, 119.0: 2.0, 120.0: 2.0, 121.0: 2.0, 122.0: 2.0, 123.0: 2.0, 124.0: 2.0, 125.0: 2.0, 126.0: 2.0, 127.0: 2.0, 128.0: 2.0, 129.0: 2.0, 130.0: 2.0, 131.0: 1.0, 132.0: 2.0, 133.0: 1.0, 134.0: 2.0, 135.0: 1.0, 136.0: 2.0, 137.0: 1.0, 138.0: 2.0, 139.0: 2.0, 140.0: 1.0, 141.0: 1.0, 142.0: 2.0, 143.0: 1.0, 144.0: 2.0, 145.0: 1.0, 146.0: 2.0, 147.0: 1.0, 148.0: 2.0, 149.0: 1.0, 150.0: 2.0, 151.0: 1.0, 152.0: 2.0, 153.0: 1.0, 154.0: 2.0, 155.0: 1.0, 156.0: 2.0, 157.0: 1.0, 158.0: 2.0, 159.0: 3.0, 160.0: 1.0, 161.0: 2.0, 162.0: 1.0, 163.0: 2.0, 164.0: 1.0, 165.0: 2.0, 166.0: 1.0, 167.0: 2.0, 168.0: 4.0}
    continuous_value_dict = {0.0: 0, 1.0: 1, 2.0: 2, 3.0: 3, 4.0: 4, 5.0: 5, 6.0: 6, 7.0: 7, 10.0: 8, 11.0: 9, 12.0: 10, 13.0: 11, 14.0: 12, 15.0: 13, 16.0: 14, 17.0: 15, 18.0: 16, 19.0: 17, 20.0: 18, 21.0: 19, 22.0: 20, 23.0: 21, 24.0: 22, 25.0: 23, 26.0: 24, 27.0: 25, 28.0: 26, 29.0: 27, 30.0: 28, 31.0: 29, 32.0: 30, 33.0: 31, 34.0: 32, 73.0: 33, 74.0: 34, 100.0: 35, 101.0: 36, 102.0: 37, 103.0: 38, 104.0: 39, 105.0: 40, 106.0: 41, 107.0: 42, 108.0: 43, 109.0: 44, 110.0: 45, 111.0: 46, 112.0: 47, 113.0: 48, 114.0: 49, 115.0: 50, 116.0: 51, 117.0: 52, 118.0: 53, 119.0: 54, 120.0: 55, 121.0: 56, 122.0: 57, 123.0: 58, 124.0: 59, 125.0: 60, 126.0: 61, 127.0: 62, 128.0: 63, 129.0: 64, 130.0: 65, 131.0: 66, 133.0: 67, 135.0: 68, 137.0: 69, 139.0: 70, 141.0: 71, 143.0: 72, 145.0: 73, 147.0: 74, 149.0: 75, 151.0: 76, 153.0: 77, 155.0: 78, 157.0: 79, 159.0: 80, 160.0: 81, 162.0: 82, 164.0: 83, 166.0: 84, 168.0: 85}
    
    output = combine_maps(parcellated, separated, index_dict, lr_dict, continuous_value_dict)
    return output